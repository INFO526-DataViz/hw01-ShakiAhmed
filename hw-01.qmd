---
title: "HW 01"
author: "Shakir Ahmed"
format: html
date: 2023-09-08 (YYYY-MM-DD)
toc: true
---

Setup of Library functions and installing packages needed for homework

```{r setup,include=FALSE, warning = FALSE, message=FALSE}
# Install & load packages
#Accidents dataset is within dsbox package

install.packages("pacman")
pacman::p_load("tidyverse")
pacman::p_load_gh("rstudio-education/dsbox")


theme_set(theme_minimal(base_size = 11))

### setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# setting width of code output
options(width = 65)

# setting figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7,        # 7" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 4,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 500             # higher dpi, sharper image
)

```

## 1 - Road traffic accidents in Edinburgh

Below code chunk is to create a new day type vector to assign each day as weekday or weekend.

```{r day_type,warning = FALSE, message=FALSE}
# Create a vector of weekdays and weekends
day_type_vector <- c(
  Monday = "Weekday", Tuesday = "Weekday", Wednesday = "Weekday", Thursday = "Weekday", Friday = "Weekday",
  Saturday = "Weekend", Sunday = "Weekend"
)
```

Now that we have created a new vector, we need to identify the type of day, and then process the data to add a new column for 'day_type'.

```{r processing,warning = FALSE, message=FALSE}
# Function to identify the day type
type <- function(day_of_week) 
{
  return(ifelse(day_of_week %in% names(day_type_vector), day_type_vector[day_of_week], "NA"))
}

# Process the data and add a new column for day_type
accidents$day_type <- sapply(accidents$day_of_week, type)

```

Visualization of the processed data with the required alpha to create a translucent plot. Facet wrap is used to split into two plots (2 row,1 col)

```{r plot,warning = FALSE, message=FALSE}

# Create a ggplot visualization
ggplot(data = accidents, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.3) +
  facet_wrap(~ day_type, ncol = 1) +
  labs(
    x        = "Time of the day",
    y        = "Density",
    title    = "Number of accidents throughout the day",
    subtitle = "By day of week and severity",
  )
```

**Observation**- The accident count is more concentrated from 12PM to 10PM (particularly data peaks at 4:00PM during weekdays and weekends). Slight accidents are more than serious or fatal accidents. There are no fatal accidents during the weekend.

## 2 - NYC marathon winners

The New York City Marathon is an annual marathon (26.2 miles / 42.195 kilometers) that courses through the five boroughs of New York City. Marathon times of runners in the Men and Women divisions of the New York City Marathon between 1970 and 2020 can be found in the nyc_marathon dataset in the openintro package

a\. Create a histogram and a box plot of the distribution of marathon times of all runners in the dataset. What features of the distribution are apparent in the histogram and not the box plot? What features are apparent in the box plot but not in the histogram?

```{r all_runners,warning = FALSE, message=FALSE}

library(openintro)
library(ggplot2)

glimpse(nyc_marathon)

#Plotting histogram for all runners
ggplot(nyc_marathon, aes(x = time)) +
  geom_histogram() +
  labs(title = "Histogram of NYC Marathon Times for all runners", 
       x = "Time (mins)", 
       y = "Number of Runners"
       )+
theme_minimal()

#Plotting boxplot for all runners
ggplot(nyc_marathon, aes(x = time)) +
geom_boxplot() +
  labs(title = "Histogram of NYC Marathon Times", 
       x = "Time (mins)", 
       y = "Number of Runners"
  )+
  theme_minimal()

```

Observation: The boxplot effectively shows the outliers and the median value.

b\. Create a side-by-side box plots of marathon times for men and women. Use different colors for the each of the box plots -- do not use the default colors, but instead manually define them (you can choose any two colors you want). Based on the plots you made, compare the distribution of marathon times for men and women.

```{r men_n_women,warning = FALSE, message=FALSE}

# Create a boxplot with different colors for male and female
ggplot(data = nyc_marathon, aes(x = time, y = division, color = division)) +
  geom_boxplot() +
  scale_fill_manual(values = c("Division A" = "deepskyblue", "Division B" = "orange")) +
  labs(
    title = "Marathon Times by Division",
    x = "Marathon Time (hours)",
    y = "Division"
  ) +
  theme_minimal()
```

Observation- The finishing time is faster for male than female with median vaues also showing the same.

d\. Visualize the marathon times of men and women over the years. As is usual with time series plot, year should go on the x-axis. Use different colors and shapes to represent the times for men and women. Make sure your colors match those in the previous part. Once you have your plot, describe what is visible in this plot but not in the others.

```{r nyc_time_series,warning = FALSE, message=FALSE}

ggplot(data = nyc_marathon, aes(x = year, y = time, color = division)) +
  geom_point() +
  scale_color_manual(values = c("Men" = "deepskyblue2", "Women" = "orange")) +
  labs(
    title = "Marathon Times Over the Years",
    x = "Year",
    y = "Marathon Time\n(in hours)",
    color = "Division"
  ) +
  theme_minimal()
```

Observation- The average finishing time for men and women are reducing over the years

## 3 - US counties

a\. What does the following code do? Does it work? Does it make sense? Why/why not?

```{r question1,warning = FALSE, message=FALSE}
ggplot(county) +
  geom_point(aes(x = median_edu, y = median_hh_income)) +
  geom_boxplot(aes(x = smoking_ban, y = pop2017))
```

Answer- The above data makes no sense as it does not show distribution of the data for educational qualifications.

b\. Which of the following two plots makes it easier to compare poverty levels (poverty) across people from different median education levels (median_edu)? What does this say about when to place a faceting variable across rows or columns?

```{r question2,warning = FALSE, message=FALSE}
ggplot(county %>% filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(median_edu ~ .)

ggplot(county %>% filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(. ~ median_edu)

```

Answer- The first plot of the data makes more sense as it shows the spread more distinctly (values) across the home ownership vs educational qualifications.

c\. Recreate the R code necessary to generate the following graphs. Note that wherever a categorical variable is used in the plot, it\'sÂ `metro`.

```{r plots_A_B, warning = FALSE, message=FALSE}

ggplot(data = county, aes(x = homeownership, y = poverty)) +
  geom_point() +
  labs(title = "Plot A",
       x = "homeownership",
       y = "poverty")

ggplot(data = county, aes(x = homeownership, y = poverty)) +
  geom_point() +
  geom_smooth(se = FALSE)+
  labs(title = "Plot B",
       x = "homeownership",
       y = "poverty")

```

```{r plots_C_D, warning = FALSE, message=FALSE}

# Plot 1: Scatter plot with smoothing line (color set to green)
ggplot(data = county, aes(x = homeownership, y = poverty, group = metro)) +
  geom_point() +  
  geom_smooth(se = FALSE, aes(color = "green")) +  # Set color as a constant ("green")
  labs(
    x = "Homeownership",
    y = "Poverty",
    title = "Scatter Plot with Smoothing Line for Metro"
  )

# Plot 2: Scatter plot (Plot B)
ggplot(data = county, aes(x = homeownership, y = poverty, group = metro)) +
  geom_smooth(se = FALSE) + 
  geom_point() +  # Add points on top of the smoothed line
  labs(
    x = "Homeownership",
    y = "Poverty",
    title = "Scatter Plot with Smoothing Line for Metro"
  )
```

```{r plots_E_F, warning = FALSE, message=FALSE}

ggplot(data = county, aes(x = homeownership, y = poverty, group = metro)) +
  geom_point(aes(color = metro)) +
  geom_smooth(aes(linetype = metro),se = FALSE) + 
  labs(
    x = "Homeownership",
    y = "Poverty",
    title = "Scatter Plot with Smoothing Line for Metro"
  ) +
  scale_linetype_manual(values = c("yes" = 21, "no" = "solid")) 


ggplot(data = county, aes(x = homeownership, y = poverty, group = metro)) +
  geom_smooth(aes(color = metro),se = FALSE) +
  geom_point(aes(color = metro)) +
  labs(
    x = "Homeownership",
    y = "Poverty",
    title = "Scatter Plot with Smoothing Line for Metro"
  )
```

## 4 - Rental apartments in SF

## 5 - Napoleon's march.
